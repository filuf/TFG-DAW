---
/***************************************************
COMPONENTE TOP MENU
Autores: Agustín
Fecha: 04/06/2025
Version: 1.1
***************************************************/
import styles from "./Header.module.css";
import UserLogin from "./UserLogin";
const apiAuthUrl = import.meta.env.VITE_API_AUTH_URL;
---

<header class={styles.header}>
  <a href="/" class={styles.logoContainer}>
    <img src="/favicon.png" alt="Logo cafetería" class={styles.logoImg} />
    <span class={styles.title}>Cafetería Ventura Rodríguez</span>
  <a/>

  <!-- Botón hamburguesa -->
  <button class={styles.hamburger} id="hamburgerBtn" aria-label="Abrir menú" aria-controls="mobileNav" aria-expanded="false">
    <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect y="7" width="32" height="3" rx="1.5" fill="#412722" class="bar bar1" />
      <rect y="15" width="32" height="3" rx="1.5" fill="#412722" class="bar bar2" />
      <rect y="23" width="32" height="3" rx="1.5" fill="#412722" class="bar bar3" />
    </svg>
  </button>
  <!-- Componente de login compartido -->
  <div class={styles.authContainer} id="sharedAuthContainer">
    <UserLogin apiAuthUrl={apiAuthUrl} client:only="react" />
  </div>

  <!-- Menú normal (escritorio) -->
  <nav class={styles.nav} id="mainNav">
    <a href="/" class={styles.navLink}>Inicio</a>
    <a href="/cart" class={styles.navLink} id="cartLink">Carrito</a>
    <a href="/orders" class={styles.navLink} id="ordersLink">Pedidos</a>
  </nav>
  
  <!-- Menú móvil (sidebar) -->
  <nav class={styles.mobileNav} id="mobileNav" aria-hidden="true">
    <div class={styles.mobileNavHeader}>
      <button class={styles.closeBtn} id="closeMobileNav" aria-label="Cerrar menú">×</button>
      <h2 class={styles.mobileNavTitle}>Menú</h2>
    </div>
    <ul class={styles.mobileNavList}>
      <li><a href="/" class={styles.mobileNavLink}>
        <span class={styles.mobileNavIcon}>🏠</span>
        Inicio
      </a></li>
      <li id="mobileCartItem" style="display: none;">
        <a href="/cart" class={styles.mobileNavLink}>
          <span class={styles.mobileNavIcon}>🛒</span>
          Carrito
        </a>
      </li>
      <li id="mobileOrdersItem" style="display: none;">
        <a href="/orders" class={styles.mobileNavLink}>
          <span class={styles.mobileNavIcon}>📋</span>
          Pedidos
        </a>
      </li>
      <li class={styles.mobileNavDivider}></li>
      <li id="mobileAuthItem">
        <!-- Componente de autenticación específico para móvil -->
        <UserLogin apiAuthUrl={apiAuthUrl} client:only="react" />
      </li>
    </ul>
  </nav>
  <div class={styles.overlay} id="navOverlay"></div>
</header>

<script>
  // Script para controlar la visibilidad del carrito basado en la autenticación
  function updateCartVisibility() {
    const cartLink = document.getElementById('cartLink');
    const ordersLink = document.getElementById('ordersLink');
    const mobileCartItem = document.getElementById('mobileCartItem');
    const mobileOrdersItem = document.getElementById('mobileOrdersItem');
    const isLoggedIn = sessionStorage.getItem('token') !== null;

    if (cartLink) cartLink.style.display = isLoggedIn ? 'block' : 'none';
    if (ordersLink) ordersLink.style.display = isLoggedIn ? 'block' : 'none';
    if (mobileCartItem) mobileCartItem.style.display = isLoggedIn ? 'block' : 'none';
    if (mobileOrdersItem) mobileOrdersItem.style.display = isLoggedIn ? 'block' : 'none';
  }

  function updateMobileAuth() {
    console.log('updateMobileAuth: Componente móvil ya está en su lugar');
  }

  function initMobileMenu() {
    const elements = {
      hamburgerBtn: document.getElementById('hamburgerBtn'),
      mobileNav: document.getElementById('mobileNav'),
      closeBtn: document.getElementById('closeMobileNav'),
      overlay: document.getElementById('navOverlay')
    };

    const { hamburgerBtn, mobileNav, closeBtn, overlay } = elements;

    if (!hamburgerBtn || !mobileNav || !closeBtn || !overlay) {
      console.warn('[initMobileMenu] Elementos no encontrados:', Object.entries(elements)
        .filter(([_, el]) => !el).map(([key]) => key).join(', '));
      return;
    }

    function openMobileNav() {
      mobileNav.setAttribute('aria-hidden', 'false');
      hamburgerBtn.setAttribute('aria-expanded', 'true');
      overlay.style.display = 'block';
      void mobileNav.offsetWidth;
      mobileNav.classList.add('open');
      overlay.classList.add('show');
      mobileNav.style.display = 'block';
      mobileNav.style.right = '0';
      mobileNav.style.visibility = 'visible';
      mobileNav.style.opacity = '1';
      updateMobileAuth();
    }

    function closeMobileNav() {
      mobileNav.setAttribute('aria-hidden', 'true');
      hamburgerBtn.setAttribute('aria-expanded', 'false');
      mobileNav.classList.remove('open');
      overlay.classList.remove('show');
      mobileNav.style.display = '';
      mobileNav.style.right = '';
      mobileNav.style.visibility = '';
      mobileNav.style.opacity = '';
      setTimeout(() => { overlay.style.display = 'none'; }, 300);
    }

    // Previene múltiples listeners duplicados
    hamburgerBtn.onclick = (e) => {
      e.preventDefault();
      openMobileNav();
    };

    closeBtn.onclick = (e) => {
      e.preventDefault();
      closeMobileNav();
    };

    overlay.onclick = (e) => {
      e.preventDefault();
      closeMobileNav();
    };
  }

  // Inicialización completa
  function initAppUI() {
    updateCartVisibility();
    updateMobileAuth();
    initMobileMenu();
  }

  // Inicial en carga
  document.addEventListener('DOMContentLoaded', initAppUI);

  // Reejecutar lógica después de navegación parcial con Astro
  document.addEventListener('astro:after-swap', initAppUI);

  // Eventos adicionales para mantener el estado sincronizado
  window.addEventListener('resize', updateMobileAuth);
  window.addEventListener('storage', (e) => {
    if (e.key === 'token') updateCartVisibility();
  });
  window.addEventListener('user-login', updateCartVisibility);
  window.addEventListener('user-logout', updateCartVisibility);
</script>